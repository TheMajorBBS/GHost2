 ==============================================
 NetFoss Utilities for Win32 Doors version 1.25 
 ==============================================

 NFU allows DOS BBS software using NetFoss to run Win32 doors and it
 also can convert a standard DOOR.SYS dropfiles to other drop files
 used to run some doors.

 NFU has the following functions:

 * Allows a Win32/64 door application to run from a DOS BBS Shell,
   which must be passed on the NFU command line. It does this by telling
   NetCom to pause the current FOSSIL session and to execute the door32
   command line and wait for the door to exit before resuming FOSSIL mode.

 * Allows converting an existing DOOR.SYS drop file to another type of
   drop file. The following drop file types can be created:
   DOOR32.SYS    - Used by most Win32 doors.
   DORINFO1.DEF  - Used by RBBS, RemoteAccess, QuickBBS, and ProBoard.
   CHAIN.TXT     - Used by WWIV BBS.

 * Allows modifing either an existing or converted dropfile to allow a
   door to run in local mode, by changing the baud rate and COM port
   values both to zero. This is often needed when running a door in DOS
   I/O mode instead of in FOSSIL mode. it can also modify the users
   "Real Name" field to contain their "Handle" instead, to allow a user
   to be known as their Handle in the door.

 * Allows passing keystrokes to the Console when the door launches,
   (this does not work for non-Console GUI doors). This can be useful for
   doors that ask if ANSI is supported, or asks the user for their name.
   It can also be used to allowing a DOS BBS to shell to a Win32 BBS that
   uses the same userbase.


   By default NFU builds a DOOR32.SYS drop file, which is needed by most
   Win32/WIN64 Doors. The DOOR32.SYS file is created by reading user data
   from the standard DOOR.SYS drop file, and also reading the Telnet Socket
   Handle from the Windows Environment Variable %SOCKET%, and the node
   number from the Environment Variable %NFNODE%.

   In some cases you may wish NFU to spawn a Win32 program that does not
   require a DOOR32.SYS such as DOSBox, which only requires the socket handle.
   This can be accomplished by using NULL as the first parameter, which
   bypasses reading DOOR.SYS or creating an alternative drop file.

   When NFU is told to build a DOS based drop file (or modify the existing
   DOOR.SYS drop file), it does not attempt to tell NetCom to run a Win32
   door. Rather it exits immediatly after creating/modifying the drop file.


 Command line parameters:

 NFU [path to DOOR.SYS] <"Door Command line + parameters in quotes"> <Opt par>

 Examples:
   NFU c:\proboard\node1 "c:\proboard\dark32\dark32.exe /n1"
   NFU . "c:\proboard\dark32\dark32.exe /n1" (dot uses current directory)
   NFU NULL c:\dosbox\dosboxdoor.bat (NULL bypasses dropfiles)
   NFU .         (Only creates  if no door to run is specified)
   NFU . /M /L   (The /M swich only alters DOOR.SYS)
   NFU . /C /L   (The /C switch only creates CHAIN.TXT)
   NFU . /D /L   (The /D switch only creates DORINFO1.DEF)
  

 Shortcuts:
    $  - Replaced by path+\ only of DOOR32.SYS
    ^  - Replaced by path+\filename of DOOR32.SYS

 Optional parameters:
   /C  - Only create DOS CHAIN.TXT dropfile    (instead of DOOR32.SYS)
   /D  - Only create DOS DORINFO1.DEF dropfile (instead of DOOR32.SYS)
   /M  - Only modify DOS DOOR.SYS dropfile     (instead of DOOR32.SYS)
   /L  - Local Mode: Set COM0: 0-BAUD in DOS dropFile.
   /H  - Subsitute Real Name with Handle in any dropfile
   /Q  - Be Quiet:   Suppress NFU messages except for error messages
   /R  - RIP Enable: Without this, RIP Emulation in DOOR.SYS is ignored
   /YN - Send Yes/No character to a 32-bit door that asks to use ANSI
   /K="x" - Stuff keyboard buffer with a character or a string of characters
            Keyboard macros: |=Enter, !N=User Name, !A=User Alias, !P=Password

 The second parameter can be a batch file (.BAT or .CMD), or an executable.
 Keyboard macros are case sensitive.



 Changes to your (non-Net2BBS) telnet server command line:
 ---------------------------------------------------------

 When using a Telnet Server other then Net2BBS, a change will be needed in
 order to pass the Socket Handle to the DOS BBS Software.

 Your current telnet server command line may look something like this:
 Command=c:\netfoss\nf.bat /n*N /h*H c:\pb\proboard.bat *N

 In the above example, the BBS batch file (in this case proboard.bat) is only
 being passed the node number, (using the *N macro) which it will be able to
 access as variable %1 since it is the first parameter passed.

 You will need to change the command line to also pass the Socket Handle
 (using the *H macro), as the second parameter being passed to proboard.bat,
 so that it will be accessable as variable %2.

 The new telnet server command line will look like this after the change:
 Command=c:\netfoss\nf.bat /n*N /h*H c:\pb\proboard.bat *N *H


 Changes to the BBS batch file:
 ------------------------------

 Add the following line to proboard.bat before it runs the BBS software:
 set NFNODE=%1
 set SOCKET=%2

 This will store the node number into the environment variable %NFNODE% and
 it will store the socket handle into the environment variable %SOCKET%.
 These environment variables can later be accessed by NFU so the socket handle
 can be placed in the DOOR32.SYS drop file it creates, and NFU can execute
 the DOOR32 door on the correct node.

 Adding your DOOR32 door to your BBS:
 ------------------------------------

 In order for a DOS BBS to run a Win32 Door, the Door command line or batch
 file must be passed through NFU on the second command line parameter shown
 above. The Door command line must be contained within quote marks to allow
 spaces between any passed parameters.

 Below are setup examples for the following 32-bit Windows doors:

 BBSLink
 DoorParty
 MannIRC
 LORD32
 Darkness
 DoorMud
 Ambroshia
 Pimp Wars
 Usurper
 Jezibel
 Food Fight 2004


 BBSLink
 -------

 BBSLink is an InterBBS Game Server using a modifed version of Manning's Telnet
 Door which automaticly logs the user into their Server and directly into the
 desired door using the BBS Sysops pre-assigned credentials.
 You can join for free at http://bbsnet.net

 How to install BBSlink for a DOS BBS:

 1. Extract BBSlink to a directory/folder, such as C:\BBSLINK
    and install Microsoft DotNet (.NET), which is required by the RM Library.

 2. Edit your BBSLINK.BAT file, and fill in the 3 codes provided by the BBSLink
    admin. While you are editing this batch file, you will need to add a
    "Change Directory" command to change to its directory somewhere before the
    bbslink.exe line:
        CD\BBSLINK
    If you are running your BBS from a different drive then BBSLink is on, then
    you may also want to add a "C:" command on the line above it.

 3. In your BBS software, configure your door to run a Command Line such as
    this example, which will run NFU.EXE and pass the path-only of your BBS
    Nodes dropfile directory, as well as the BBSLINK.BAT that NFU will
    execute along with its needed parameters.

    For example: ProBoard BBS is configured with the following directory
    structure:
    C:\PB  (main BBS directory)
    C:\PB\NODE1   (Node 1 dropfile directory)
    C:\PB\NODE2   (Node 2 dropfile directory)

    ProBoard BBS uses the following Door Command Line macros:
        *# is replaced by the Node number
        *D tells ProBoard to create a DOOR.SYS drop file, and is filtered out. 
    In this case, the following door Command Line could be configured in ProCfg:
    c:\netfoss\nfu.exe c:\pb\node*# "c:\bbslink\bbslink.bat lord C:\pb\node*#\DOOR32.SYS" *D

    Note that for node 1, the above command line would be translated by the BBS
    as this:
    c:\pb\nfu.exe c:\pb\node1 "c:\bbslink\bbslink.bat lord c:\pb\node1\DOOR32.SYS"

    Since ProBoard (and many other BBS programs) sets the current directory as the node's
    dropfile directory before executing a door, you could shorten the size of the
    first parameter by replacing the path to the dropfile diretory shown above with just
    a ".", telling NFU to use the current directory to read door.sys from and to create
    the DOOR32.SYS in, like so:
    c:\netfoss\nfu.exe . "c:\bbslink\bbslink.bat lord c:\pb\node1\DOOR32.SYS" *D

    The second parameter can be shortened by replacing "{path}\DOOR32.SYS"
    with a "^" character, like so:
    c:\netfoss\nfu.exe . "c:\bbslink\bbslink.bat lord ^" *D

   Note: the *D in this example is used to tell ProBoard to create a DOOR.SYS
   drop file. Other BBS software will have different ways of configuring this
   which are often not command line macros. Many BBS programs create a DOOR.SYS
   by default.

   Check your BBS documentation on what macro it uses to pass the node number.
   While Proboard uses *#, most BBS software use *N and many use other macros.

 4. Once you have BBSLink working sucessfully with the above configuration for
    the LORD door, simply create additional menu options as above for the other
    door games available on BBSlink, replacing the word "lord" with one of the
    other door codes, such as lord2, teos, ooww, tw, luna, etc. A complete list
    of codes is available at http://www.bbslink.net/sysop/

   Avoid these common mistakes:
   * Don't leave out the quote marks on the Command Line passed to NFU. NFU
     requires two parameters:
      - The dropfile path to the door.sys.
      - The full command line to execute.
     The second parameter must be in quotes if it contains its own set of
     parameters.
   * Do not include the name of DOOR.SYS in parameter 1, just the path to it.
     NFU will read the DOOR.SYS dropfile here, and will create the DOOR32.SYS
     dropfile in the same directory before executing the Command Line specified
     in parameter 2.
   * BBSLink requires NOT ONLY the path to a DOOR32.SYS file as stated in it's
     documentation, it also requires the DOOR32.SYS filename to be included in
     that path.


 DoorParty
 ---------
 DoorParty is an InterBBS Game Server. It uses Manning's Telnet Door by Rick
 Parrish of R&M software, as well as the DoorParty Connector software. This
 combination automaticly logs  the user into the DoorParty Server and directly
 into the desired door using the BBS Sysops pre-assigned credentials. You can
 join for free at http://wiki.throwbackbbs.com/doku.php

 The DoorParty wiki has examples of how to set it up using NetFoss and NFU.

 How to set DoorParty up on a Telegard (DOS) BBS:
 http://wiki.throwbackbbs.com/doku.php?id=howto:telegard_windows_dpc

 How to set DoorParty up on a GAP (DOS) BBS:
 http://wiki.throwbackbbs.com/doku.php?id=howto:gap_windows_dpc

 At the time of this writing, other DOS BBS examples were being added to the
 DoorParty Wiki, including EzyCom and WWIV BBSes.


 MannIRC Door
 ------------

 MannIRC is a Bitch-X style IRC client for BBS systems by Rick Parrish of
 R&M Software, and is available from http://randm.ca

 Here is how to install it.

 1. Extract MANNIRC.RAR to a directory. In our example we will use C:\PB\MANNIRC

 2. Open MannIRC.ini in a text editor and edit the options as described in
    MANNIRC.HTML

 3. In your BBS software, configure your door to run a Command Line, which will
    run NFU.EXE and pass the path-only of your BBS Nodes dropfile directory,
    as well as the MANNIRC.EXE that NFU will execute along with its needed node
    parameter.
    For example, using ProBoard BBS with the following directory structure:
    C:\PB  (main BBS directory)
    C:\PB\NODE1   (Node 1 dropfile directory)
    C:\PB\NODE2   (Node 2 dropfile directory)

    ProBoard BBS uses the following Door Command Line macros:
       *# is replaced by the Node number
       *D tells ProBoard to create a DOOR.SYS drop file, and is filtered out. 
    The following type-7 Command Line can be configured for this door in ProCfg:
    c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\mannirc\mannirc.exe c:\pb\node\*#door32.sys" *D

   The above command line would be translated by the BBS on node 1 as:
   c:\netfoss\nfu.exe c:\pb\node1 "c:\pb\mannirc\mannirc.exe c:\pb\node1\door32.sys"

   If your BBS software automaticly sets the current directory as the node's
   dropfile directory before executing a door, you can shorten the size of the
   first parameter replacing the path to the dropfile diretory shown above in
   parameter 1 with just a ".", telling NFU to use the current directory to
   read door.sys from and to create the door32.sys in, like so:
   c:\netfoss\nfu.exe . "c:\pb\mannirc\mannirc.exe c:\pb\node\*#door32.sys" *D

   To make the second parameter shorter, you can use the "^" shortcut character
   to replace the path and filename of the DOOR32.SYS like so:
   c:\netfoss\nfu.exe . "c:\pb\mannirc\mannirc.exe ^" *D

   (*D tells ProBoard to make a DOOR.SYS. Leave it out for other BBS Software)


 LORD32
 ------ 

 Legend of the Red Dragon Win32 edition was never released to the public. It was written
 by Michael Preslar while he worked for Metropolis Gameport, and the 2005 beta version
 can be found on several BBS sites. Only the DOS edition is available from gameport.com.

 Here is how to install it:

 1. Extract 32LO407B.ZIP to a directory/folder. In this example
    we will assume C:\PB\LORD32

 2. Run LORDCFG.EXE, and if this is a new installation it will prompt you to
    create a new LORD.DAT file. 
    Select Configure Nodes, and Use the "[" and "]" keys to go forward and back
    one node, and for each node page, set the following:
       BBS Software: DOOR.SYS
       Path to Dropfile: <Where the BBS creates the DOOR.SYS for this node>
       Fossil/Internal:  Regular Fossil Driver
   Once all nodes are configured, press escape to exit.

 3. In your BBS software, configure your door to run a Command Line such as
    this example, which runs NFU.EXE passing the path-only of your BBS Nodes
    dropfile directory, as well as the LORD32.EXE that NFU will execute along
    with its node number parameter.
    An example: ProBoard BBS software with the following directory structure:
    C:\PB  (main BBS directory)
    C:\PB\NODE1   (Node 1 dropfile directory)
    C:\PB\NODE2   (Node 2 dropfile directory)

   ProBoard BBS uses the following Door Command Line macros:
       *# is replaced by the Node number
       *D tells ProBoard to create a DOOR.SYS drop file, and is filtered out. 
   The following type-7 Command Line could be configured for the door in ProCfg:
   c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\lord32\lord.exe -Dc:\pb\node*#\door32.sys" *D

   For node 1, the above command line would be translated by the BBS as:
   c:\netfoss\nfu.exe c:\pb\node1 "c:\pb\lord32\lord32.exe -Dc:\pb\node1\door32.sys"

   If your BBS software automaticly sets the current directory as the node's
   dropfile directory before executing a door, you can shorten the size of the
   first parameter by replacing the path to the dropfile diretory with just a
   ".", telling NFU to use the current directory to read door.sys from and to
   create the door32.sys in, like so:
   c:\netfoss\nfu.exe . "c:\pb\lord32\lord32.exe -Dc:\pb\node*#\door32.sys" *D

   You can also shorten the second parameter by replacing the path+\door32.sys to
   with the "^" character like so:
   c:\netfoss\nfu.exe . "c:\pb\lord32\lord32.exe -D^" *D

   (*D tells ProBoard to make a DOOR.SYS. Leave it out for other BBS Software)


 Darkness
 --------

 Darkness was one of the first DOOR32 door games. It's a LORD style game, by
 Jack Phlash of Demonic. It's available from Distortion BBS at http://d1st.org
 Here is how to install it.

 1. Extract DRK100B3.ZIP the D112001.ZIP update to a directory. In this example
    we will assume C:\PB\DARK32

 2. Run DARKCFG.EXE, and select [c] BBS and modem config.
    Use the "[" and "]" keys to go forward and back one node, and for each node
    page, you will need to select "[d] Drop file directory" and change it to
    the correct directory for your BBS. For example, C:\PB\NODE1\  for Node 1
    Once all nodes have been configured, press [q] twice to quit.

 3. In your BBS software, configure your door to run a Command Line which runs
    NFU.EXE and passes the path-only of your BBS Nodes dropfile directory, as
    well as the DARK32.EXE that NFU will execute along with node parameter.
    For example, using ProBoard BBS with the followingdirectory structure:
   C:\PB  (main BBS directory)
   C:\PB\NODE1   (Node 1 dropfile directory)
   C:\PB\NODE2   (Node 2 dropfile directory)

   ProBoard BBS uses the following Door Command Line macros:
       *# is replaced by the Node number
       *D tells ProBoard to create a DOOR.SYS drop file, and is filtered out. 
   The following type-7 Command Line is configured for this door in ProCfg:
   c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\dark32\dark32.exe /N*#" *D

   Note that for node 1, the above command line would be translated by the
   BBS as so:
   c:\netfoss\nfu.exe c:\pb\node1 "c:\pb\dark32\dark32.exe /N1"

   If your BBS software automaticly sets the current directory as the node's
   dropfile  directory before executing a door, you can shorten the size of
   the first parameter by replacing the path to the dropfile diretory shown
   above in parameter 1 with just a ".", telling NFU to use the current
   directory to read door.sys from and to create the door32.sys in, like so:
   c:\netfoss\nfu.exe . "c:\pb\dark32\dark32.exe /N1" *D

   (*D tells ProBoard to make a DOOR.SYS. Leave it out for other BBS Software)


 DoorMud
 -------

 DoorMud - Land of the Forgotten is a Multi User Dungeon (MUD) by Evan Elias.
 It's available from http://dmud.thebbs.org

 Here is how to install it:

 1. Extract the DOOR32 version of DoorMud (DMUD099D.ZIP) to a directory.
    (In this example we will assume C:\PB\DMUD)

 2. First run the door in local mode by executing "dmud32d.exe -l".  The game will
    automatically finish its installation the first time you run it in local mode.

 3. In your BBS software, configure your door to run a Command Line, which will
    run NFU.EXE and pass the path-only of your BBS Nodes dropfile directory, as
    well as the DMUDD32.EXE that NFU will execute along with its parameters.
    For example, Using ProBoard BBS with the following directory structure:
      C:\PB  (main BBS directory)
      C:\PB\NODE1   (Node 1 dropfile directory)
      C:\PB\NODE2   (Node 2 dropfile directory)
 
   ProBoard BBS uses the following Door Command Line macros:
       *# is replaced by the Node number
       *D tells ProBoard to create a DOOR.SYS drop file, and is filtered out. 
   The following type-7 Command Line could be configured for this door in ProCfg:
   c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\dmud\dmudd32.exe -N *# -D c:\pb\node*#" *D

   For node 1, the above command line would be translated by the BBS as:
   c:\netfoss\nfu.exe c:\pb\node1 "c:\pb\dmud\dmudd32.exe -N 1 -D c:\pb\node1"

   If your BBS software automaticly sets the current directory as the node's
   dropfile directory before executing a door, you can shorten the size of the
   first parameter by replacing the path to the dropfile diretory shown above
   in parameter 1 with just a ".", telling NFU to use the current directory to
   read door.sys from and to create the door32.sys in, like so:
   c:\netfoss\nfu.exe . "c:\pb\dmud\dmudd32.exe -N *# -D c:\pb\node*#" *D

   You can also shorten the second parameter by replacing the path (only) to
   the DOOR32.SYS file (without the filename) with the "$" character like so:
   c:\netfoss\nfu.exe . "c:\pb\dmud\dmudd32.exe -N *# -D $" *D

   (*D tells ProBoard to make a DOOR.SYS. Leave it out for other BBS Software)
   


 Ambroshia
 ---------

 Ambroshia - The Test of Time is a Multi User Dungeon (MUD) game by Dominic Carretto, and
 it's available from http://ambroshia.thebbs.org

 Here is how to install it: (Assuming that your BBS uses *# as the node macro)

 1. Extract the Win32 version of Ambroishia (AMB4031.ZIP) to a directory/folder.
    (In this example we will assume C:\PB\AMBV4)

 2. In your BBS software, configure your door to run a Command Line such as this example:
    c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\amb\amblaunch.exe /n *# /d c:\pb\node*#\door32.sys" *D

    Note that for node 1, the above command line would be translated by the BBS as so:
    c:\netfoss\nfu.exe c:\pb\node1 C:\PB\amb\amblaunch.exe /n 1 /d c:\pb\node1\door.sys"

    If your BBS software automaticly sets the current directory as the node's dropfile
    directory before executing a door, you can shorten the size of parameter 1 like this:
    c:\netfoss\nfu.exe . "c:\pb\amb\amblaunch.exe /n *# /d c:\pb\node*#\door32.sys" *D

    You can also shorten the second parameter by replacing the path (only) to   
    c:\netfoss\nfu.exe . "c:\pb\amb\amblaunch.exe /n *# /d ^" *D

    (*D tells ProBoard to make a DOOR.SYS. Leave it out for other BBS Software)


Pimpwars
--------

 PimpWars is another classic RPG in which you play a pimp. It was updated to
 Win32 by James Coyle of MysticBBS fame.

 James left an annoying "feature" from the original game, in which it ignores the ANSI
 graphics setting found in the drop file, and instead asks the user "Use ANSI? (Y/N)"
 when it start up. NFU can automaticlly answer this question, so it's never even seen by
 the user by adding the /YN switch as the third parameter.

 Here is how to install it: (Assuming that your BBS uses *# as the node macro)

 1. Extract PW_153W.ZIP to a directory/folder, such as C:\PB\PIMPWARS

 2. In your BBS software, configure your door to run a Command Line such as this:
    c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\pimpwars\pimpwars.exe c:\pb\node*#\door32.sys *#" /YN *D

   Note that for node 1, the above command line would be translated by the BBS as so:
   c:\netfoss\nfu.exe c:\pb\node1 "c:\pb\pimpwars\pimpwars.exe c:\pb\node1\door32.sys 1" /YN *D

   If your BBS software automaticly sets the current directory as the node's
   dropfile directory before executing a door, parameter 1 can be shortened to:
   c:\netfoss\nfu.exe . "c:\pb\pimpwars\pimpwars.exe c:\pb\node*#\door32.sys *N" /YN *D

   The second parameter can be shortened by replacing path+/DOOR32.SYS with "^":
   c:\netfoss\nfu.exe . "c:\pb\pimpwars\pimpwars.exe ^ *#" /YN *D

   (Leave out the *D if not using ProBoard - this tells ProBoard to create a DOOR.SYS)


 Jezabel
 -------

 Jezabel is an RPG in which you are a virus and battle other malware written by
 DreamMaster. It's available from http://dreamlandbbs.org.

 Here is how to install it: (Assuming that your BBS uses *# as the node macro)

 1. Extract JZBL25.ZIP to a directory/folder. In this example we use C:\pb\jez

 2. In your BBS software, configure your door to run a Command Line such as:
    c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\jez\jezw32.exe c:\pb\node*#\door32.sys" *D

    Note that for node 1, the above command line would be translated by the BBS as so:
    c:\netfoss\nfu.exe c:\pb\node1 C:\pb\jez\jezw32.exe c:\pb\node1\door.sys"

    If your BBS software automaticly sets the current directory as the node's dropfile
    directory before executing a door, parameter 1 can be shortened to this:
    c:\netfoss\nfu.exe . C:\pb\jez\jezw32.exe c:\pb\node*#\door.sys"

    The second parameter can be shortened by replacing the path+/DOOR32.SYS with "^":   
    c:\netfoss\nfu.exe . C:\pb\jez\jezw32.exe ^" *D

    (Leave out the *D if not using ProBoard - this tells ProBoard to create a DOOR.SYS)


 Food Fight 2004
 ---------------

 Food Fight 2004 was a Win32 remake of the Classic DOS Food Fight door, written by
 Chris Martino. 


 1. Extract FF2K4V24.ZIP to a directory. In this example we will use C:\PB\FOOD

 2. In your BBS software, configure your door to run a Command Line such as:
    c:\netfoss\nfu.exe c:\pb\node*# "c:\pb\food\ff2k4.exe -Dc:\pb\node*#\door32.sys" *D

    For node 1, the above command line would be translated by the BBS as so:
    c:\netfoss\nfu.exe c:\pb\node1 "c:\pb\food\ff2k4.exe -Dc:\pb\node1\door32.sys"

    If your BBS software automaticly sets the current directory as the node's dropfile
    directory before executing a door, parameter 1 can be shortened to this:
    c:\netfoss\nfu.exe . "c:\pb\food\ff2k4.exe -Dc:\pb\node*#\door32.sys" *D

    The second parameter can also be shortened by replacing path+/DOOR32.SYS with "^":   
    c:\netfoss\nfu.exe . "C:\pb\jez\jezw32.exe ^" *D

    (Leave out the *D if not using ProBoard - this tells ProBoard to create a DOOR.SYS)

 Clans
 -----
 Clans is an excellent door, but unfortunatly it was ported to Win32 using the
 OpenDoors toolkit, which like many doors results in a non-console Window for
 the local node. In some cases minimizing this window with the -silent switch
 will cause it to crash, so you may want to instead use the DOS version of
 Clans which runs very fast under NetFoss.



 Other Win32 doors that were tested but not found to be worthwhile documenting:
 MyCroft doors: sherlock Holmes, Fictitious Stock Exchange, Steller Quest, U-Boat.
 Atlantis doors: Kentucky Derby, Vegas Slots 
 Tournament Trivia (from DoorMud author)
 KFTO Boxing (The_Vipah)
 BBS Simulator (Zoob)


 Win32 doors that appear not to work:
 ------------------------------------
 The Online Pub for Windows by Paul Sidorsky only supports Windows COM port handles,
 and not TCP Sockets, so it will not work.

 The Telnet Door by Enigma/Dink released with his Citrisoft kit appears to only support
 Windows COM Port handles, and not TCP Sockets, so it will not work.

 The Telnet Door by Mercyful Fate will get as far as making a remote connection, but once
 it displays the remote logon screen, it will disconnect (or perhaps the remote BBS
 disconnects due to a telnet negotiation issue).
 If anyone is able to get this to work correctly, please let me know.

 Usurper - Great classic game but the Win32 version is still in beta and requires upgrading
 from other versions currently. This is a pain to get working with NFU as it requires that
 the current directory is changed to the Usurper folder first.

 The only telnet door that appears to work so far is the one by Rick at R&M, which uses
 settings simular to the one for BBSLink without needing a batch file.


[End of file]